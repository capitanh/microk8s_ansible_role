---
- name: Install pip packages
  pip:
    name:
      - kubernetes

- name: Install microk8s snap
  snap:
    classic: yes
    name: microk8s
    channel: 1.24/stable

- name: Install helm snap package
  snap:
    classic: yes
    name: helm

- name: Add admin user to microk8s group
  user:
    name: "{{admin_user}}"
    groups: microk8s
    append: yes

- name: Enable microk8s services
  command: "microk8s enable {{item}}"
  with_items: "{{microk8s_services}}"

#- name: Create kubectl snap alias
#  command: snap alias microk8s.kubectl kubectl

- name: Get kubectl latest version
  uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: true
    validate_certs: no
  register: KUBECTL_LATEST_VERSION

- name: Install kubectl
  get_url:
    url: "https://dl.k8s.io/release/{{KUBECTL_LATEST_VERSION}}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl
    owner: root
    group: root
    mode: 0755
    validate_certs: no  

- name: Enable kubectl autocompletion
  lineinfile:
    path: "/home/{{admin_user}}/.zshrc"
    line: source <(microk8s.kubectl completion zsh)
    create: yes

- name: Create kc zsh alias
  lineinfile:
    path: "/home/{{admin_user}}/.zshrc"
    line: alias kc='kubectl'
    create: yes

- name: Make iptables changes persistent
  apt:
    name: "{{packages}}"
    state: present
    update_cache: yes
  vars:
    packages:
    - iptables-persistent

- name: Make sure pods have access to internet
  iptables:
    chain: FORWARD
    policy: ACCEPT

- name: Create kube config folder
  file:
    path: "/home/{{admin_user}}/.kube"
    state: directory
    owner: "{{admin_user}}"
    group: "{{admin_user}}"

- name: Generate kubeconfig
  shell: "microk8s config > /home/{{admin_user}}/.kube/config"

- name: Make kube config not world-readable
  file:
    path: "/home/{{admin_user}}/.kube/config"
    mode: 0600
    owner: "{{admin_user}}"
    group: "{{admin_user}}"

- name: Install k9s
  unarchive:
    src: "https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_amd64.tar.gz"
    dest: /usr/local/bin/
    remote_src: yes
    validate_certs: no

- name: Create k9s config directory
  file:
    path: /home/{{admin_user}}/.config/k9s
    state: directory
    owner: "{{admin_user}}"
    group: "{{admin_user}}"
    mode: 0755

- name: Copy k9s skin and plugins
  copy:
    src: "{{item}}"
    dest: /home/{{admin_user}}/.config/k9s/
    owner: "{{admin_user}}"
    group: "{{admin_user}}"
    mode: 0644
  with_items:
    - skin.yml
    - plugin.yml

- name: Install Helm Diff
  kubernetes.core.helm_plugin:
    state: present
    plugin_path: https://github.com/databus23/helm-diff
  become_user: "{{admin_user}}"
